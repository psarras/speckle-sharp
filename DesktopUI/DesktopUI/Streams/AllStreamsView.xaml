<UserControl x:Class="Speckle.DesktopUI.Streams.AllStreamsView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="clr-namespace:Speckle.DesktopUI.Streams"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
  xmlns:s="https://github.com/canton7/Stylet"
  xmlns:utils="clr-namespace:Speckle.DesktopUI.Utils"
  d:DesignHeight="450"
  d:DesignWidth="600"
  mc:Ignorable="d">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/SpeckleDesktopUI;component/Themes/StaticStyles.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <utils:InverseBooleanConverter x:Key="InverseBooleanConverter" />
      <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

      <!--#region Branch Swapping Button (Sender/Receiver shared)-->
      <ControlTemplate x:Key="BranchButton">
        <Button x:Name="BranchButton"
          Width="auto"
          Padding="10,0"
          HorizontalAlignment="Left"
          local:ContextMenuLeftClickBehavior.IsLeftClickEnabled="True"
          md:ButtonAssist.CornerRadius="3"
          ContextMenuService.Placement="Bottom"
          FontSize="12"
          Style="{StaticResource MaterialDesignFlatButton}">
          <Button.ToolTip>
            <TextBlock>
              <Run Text="Current branch is" />
              <Run Text="{Binding Branch.name}" />
              <LineBreak />
              <Run Text="Click to change." />
            </TextBlock>
          </Button.ToolTip>
          <Grid HorizontalAlignment="Left">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="20" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <md:PackIcon Grid.Column="0"
              Margin="0,0,0,0"
              HorizontalAlignment="Left"
              Kind="SourceBranch" />
            <TextBlock Grid.Column="1"
              Margin="4,0"
              FontWeight="Normal"
              Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext.Branch.name}" />
          </Grid>
          <Button.Resources>
            <local:BindingProxy x:Key="Proxy"
              Data="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}" />
          </Button.Resources>
          <Button.ContextMenu>
            <ContextMenu FontSize="12"
              ItemsSource="{Binding BranchContextMenuItems, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
              <ContextMenu.ItemTemplate>
                <DataTemplate>
                  <Grid Background="Transparent"
                    ToolTip="{Binding Tooltip}">
                    <Grid.InputBindings>
                      <MouseBinding Command="{s:Action SwitchBranch}"
                        CommandParameter="{Binding CommandArgument}"
                        Gesture="LeftClick" />
                    </Grid.InputBindings>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="20" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <md:PackIcon Grid.Column="0"
                      Kind="{Binding Icon.Kind}" />
                    <TextBlock Grid.Column="1"
                      Text="{Binding Branch.name}"
                      TextAlignment="Left" />
                  </Grid>
                </DataTemplate>
              </ContextMenu.ItemTemplate>
            </ContextMenu>
          </Button.ContextMenu>
        </Button>
      </ControlTemplate>
      <!--#endregion-->

      <!--#region Sender Selection/Filters Button (Sender)-->
      <ControlTemplate x:Key="SelectionButton">
        <Button x:Name="SelectionButton"
          MinWidth="120"
          Padding="5"
          HorizontalAlignment="Left"
          local:ContextMenuLeftClickBehavior.IsLeftClickEnabled="true"
          md:ButtonAssist.CornerRadius="3"
          FontSize="12"
          FontWeight="Normal">
          <Button.Style>
            <Style BasedOn="{StaticResource MaterialDesignRaisedButton}"
              TargetType="Button">
              <Style.Triggers>
                <DataTrigger Binding="{Binding SendEnabled}"
                  Value="True">
                  <Setter Property="Background"
                    Value="Transparent" />
                  <Setter Property="BorderBrush"
                    Value="Transparent" />
                  <Setter Property="Foreground"
                    Value="{StaticResource PrimaryHueMidBrush}" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Button.Style>
          <Button.ToolTip>
            <TextBlock>
              <Run FontWeight="Bold"
                Text="{Binding ObjectSelectionTooltipText, Mode=OneWay}" />
              <LineBreak />
              <Run Text="Click to change." />
            </TextBlock>
          </Button.ToolTip>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <md:PackIcon Grid.Column="0"
              Kind="{Binding ObjectSelectionButtonIcon.Kind}" />
            <TextBlock Grid.Column="2"
              Margin="5,2"
              FontWeight="Normal">
              <Run Text="{Binding ObjectSelectionButtonText, Mode=OneWay}" />
            </TextBlock>
          </Grid>
          <Button.Resources>
            <local:BindingProxy x:Key="Proxy"
              Data="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" />
          </Button.Resources>
          <Button.ContextMenu>
            <ContextMenu FontSize="12">
              <MenuItem Command="{s:Action ShowStreamUpdateObjectsDialog}"
                CommandParameter="{Binding}"
                ToolTip="A filter will run automatically and dynamically select elements that match when sending."
                Visibility="{Binding AppHasFilters, Converter={StaticResource BooleanToVisibilityConverter}}">
                <MenuItem.Icon>
                  <md:PackIcon Kind="FilterList" />
                </MenuItem.Icon>
                <MenuItem.Header>
                  <TextBlock>
                    <Run>Set/Edit Objects Filter</Run>
                  </TextBlock>
                </MenuItem.Header>
              </MenuItem>

              <Separator Visibility="{Binding AppHasFilters, Converter={StaticResource BooleanToVisibilityConverter}}" />

              <MenuItem Command="{s:Action SetObjectSelection}"
                CommandParameter="{Binding}">
                <MenuItem.ToolTip>
                  <TextBlock>
                    <Run>Clears any existing objects, and sets the current selected ones.</Run>
                    <LineBreak />
                    <Run FontWeight="Bold">NOTE: Will clear any filters previously set.</Run>
                  </TextBlock>
                </MenuItem.ToolTip>
                <MenuItem.Icon>
                  <md:PackIcon Foreground="Green"
                    Kind="AddCircle" />
                </MenuItem.Icon>
                <MenuItem.Header>
                  <TextBlock>
                    <Run>Set Selection</Run>
                  </TextBlock>
                </MenuItem.Header>
              </MenuItem>

              <MenuItem Command="{s:Action AddObjectSelection}"
                CommandParameter="{Binding}">
                <MenuItem.ToolTip>
                  <TextBlock>
                    <Run>Adds the currently selected objects to the existing list. Does not clear old ones.</Run>
                    <LineBreak />
                    <Run FontWeight="Bold">NOTE: Will clear any filters previously set.</Run>
                  </TextBlock>
                </MenuItem.ToolTip>
                <MenuItem.Icon>
                  <md:PackIcon Foreground="{StaticResource PrimaryHueLightBrush}"
                    Kind="AddCircle" />
                </MenuItem.Icon>
                <MenuItem.Header>
                  <TextBlock>
                    <Run>Add Selection</Run>
                  </TextBlock>
                </MenuItem.Header>
              </MenuItem>

              <MenuItem Command="{s:Action RemoveObjectSelection}"
                CommandParameter="{Binding}">
                <MenuItem.ToolTip>
                  <TextBlock>
                    <Run>Removes the selected objects.</Run>
                    <LineBreak />
                    <Run FontWeight="Bold">NOTE: Will clear any filters previously set.</Run>
                  </TextBlock>
                </MenuItem.ToolTip>
                <MenuItem.Icon>
                  <md:PackIcon Foreground="IndianRed"
                    Kind="MinusCircle" />
                </MenuItem.Icon>
                <MenuItem.Header>
                  <TextBlock>
                    <Run>Remove Selection</Run>
                  </TextBlock>
                </MenuItem.Header>
              </MenuItem>

              <MenuItem Command="{s:Action ClearObjectSelection}"
                CommandParameter="{Binding}">
                <MenuItem.ToolTip>
                  <TextBlock>
                    <Run>Removes all selected objects.</Run>
                    <LineBreak />
                    <Run FontWeight="Bold">NOTE: Will clear any filters previously set.</Run>
                  </TextBlock>
                </MenuItem.ToolTip>
                <MenuItem.Icon>
                  <md:PackIcon Foreground="OrangeRed"
                    Kind="RemoveCircleMultiple" />
                </MenuItem.Icon>
                <MenuItem.Header>
                  <TextBlock>
                    <Run>Clear Selection</Run>
                  </TextBlock>
                </MenuItem.Header>
              </MenuItem>

            </ContextMenu>
          </Button.ContextMenu>
        </Button>
      </ControlTemplate>
      <!--#endregion-->

      <!--#region Commit Swapping Button (Receiver)-->
      <ControlTemplate x:Key="CommitSwappingButton">
        <Button x:Name="CommitSwappingButton"
          Width="auto"
          Padding="0"
          HorizontalAlignment="Left"
          local:ContextMenuLeftClickBehavior.IsLeftClickEnabled="True"
          md:ButtonAssist.CornerRadius="3"
          ContextMenuService.Placement="Bottom"
          FontSize="12"
          Style="{StaticResource MaterialDesignFlatButton}">
          <Button.ToolTip>
            <TextBlock>
              <Run Text="Current commit is" />
              <Run Text="{Binding Commit.id}" />
              <LineBreak />
              <Run Text="Click to change." />
            </TextBlock>
          </Button.ToolTip>
          <Grid HorizontalAlignment="Left">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="20" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <md:PackIcon Grid.Column="0"
              Margin="0,0,0,0"
              HorizontalAlignment="Left"
              Kind="SourceCommit" />
            <TextBlock Grid.Column="1"
              Margin="3,1,14,1"
              FontWeight="Normal"
              Text="{Binding Commit.id}" />
          </Grid>
          <Button.Resources>
            <local:BindingProxy x:Key="Proxy"
              Data="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}" />
          </Button.Resources>
          <Button.ContextMenu>
            <ContextMenu FontSize="12"
              ItemsSource="{Binding CommitContextMenuItems, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
              <ContextMenu.ItemTemplate>
                <DataTemplate>
                  <StackPanel>
                    <Grid Margin="0,0">
                      <Grid.InputBindings>
                        <MouseBinding Command="{s:Action SwitchCommit}"
                          CommandParameter="{Binding CommandArgument}"
                          Gesture="LeftClick" />
                      </Grid.InputBindings>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <md:PackIcon Grid.Row="0"
                        Grid.Column="0"
                        Margin="-20,0,0,0"
                        HorizontalAlignment="Left"
                        Kind="{Binding Icon.Kind}" />
                      <TextBlock Grid.Row="0"
                        Grid.Column="1"
                        TextAlignment="Left">
                        <Run Text="{Binding MainText}" />
                        <!--<Run Text="-" />-->
                        <Run FontWeight="Bold"
                          Text="{Binding SecondaryText}" />
                      </TextBlock>
                    </Grid>
                  </StackPanel>
                </DataTemplate>
              </ContextMenu.ItemTemplate>
            </ContextMenu>
          </Button.ContextMenu>
        </Button>
      </ControlTemplate>
      <!--#endregion-->

      <!--#region Stream Card Template-->
      <DataTemplate x:Key="StreamCardTemplate">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>

          <!--#region Disabled Card (no account)-->

          <md:Card Grid.Row="0"
            Width="Auto"
            Margin="12,10,12,10"
            Panel.ZIndex="100"
            md:ShadowAssist.ShadowDepth="Depth0"
            Opacity=".9"
            UniformCornerRadius="8"
            Visibility="{Binding Client, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}">

            <Grid Margin="16"
              Visibility="{Binding Client, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}">
              <StackPanel Grid.ColumnSpan="2"
                Margin="8"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
                <TextBlock FontSize="14"
                  Text="No local account for server:"
                  TextWrapping="Wrap" />
                <TextBlock Margin="0,4"
                  FontFamily="Consolas"
                  Text="{Binding ServerUrl}"
                  TextWrapping="Wrap" />
                <TextBlock
                  Text="Please ensure you have an account for this server and have added it to the Speckle Manager"
                  TextWrapping="Wrap" />
              </StackPanel>
              <Button Width="28"
                Height="28"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                md:RippleAssist.ClipToBounds="True"
                Command="{s:Action RemoveDisabledStream}"
                CommandParameter="{Binding}"
                Content="{md:PackIcon Kind=TrashCanOutline,
                                      Size=16}"
                Style="{StaticResource MaterialDesignIconButton}"
                ToolTip="Remove this stream" />

            </Grid>
          </md:Card>


          <!--#endregion-->

          <md:Card Grid.Row="0"
            Width="Auto"
            Margin="12,10,12,10"
            UniformCornerRadius="8">
            <md:Card.Style>
              <Style>
                <Style.Triggers>
                  <DataTrigger Binding="{Binding ServerUpdates}"
                    Value="True">
                    <Setter Property="md:ShadowAssist.ShadowDepth"
                      Value="Depth5" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding ServerUpdates}"
                    Value="False">
                    <Setter Property="md:ShadowAssist.ShadowDepth"
                      Value="Depth1" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </md:Card.Style>
            <StackPanel>
              <Grid x:Name="CardGrid"
                Margin="16">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!--#region Card Header-->

                <Grid Name="StreamCardTitle"
                  Grid.Row="0">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>

                  <WrapPanel Grid.Row="0"
                    Grid.Column="0">
                    <TextBlock Grid.Column="0"
                      VerticalAlignment="Center"
                      Style="{StaticResource MaterialDesignHeadline4TextBlock}"
                      TextWrapping="Wrap">
                      <Hyperlink Command="{s:Action ShowStreamInfo}"
                        CommandParameter="{Binding}"
                        ToolTip="Open stream details page.">
                        <TextBlock FontSize="20"
                          Text="{Binding Stream.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                      </Hyperlink>
                    </TextBlock>
                  </WrapPanel>

                  <Button Grid.Row="0"
                    Grid.Column="1"
                    Width="28"
                    Height="28"
                    HorizontalAlignment="Right"
                    md:RippleAssist.ClipToBounds="True"
                    Command="{s:Action CopyStreamUrl}"
                    CommandParameter="{Binding}"
                    Content="{md:PackIcon Kind=LinkVariant,
                                          Size=16}"
                    Style="{StaticResource MaterialDesignIconButton}"
                    ToolTip="Copy stream url to clipboard" />

                  <Button Grid.Row="0"
                    Grid.Column="2"
                    Width="28"
                    Height="28"
                    HorizontalAlignment="Right"
                    md:RippleAssist.ClipToBounds="True"
                    Command="{s:Action OpenStreamInWeb}"
                    CommandParameter="{Binding}"
                    Content="{md:PackIcon Kind=OpenInNew,
                                          Size=16}"
                    Style="{StaticResource MaterialDesignIconButton}"
                    ToolTip="Open this stream in the browser" />

                  <ToggleButton Grid.Row="0"
                    Grid.Column="3"
                    Width="28"
                    Height="28"
                    Command="{s:Action SwapState}"
                    CommandParameter="{Binding}"
                    IsEnabled="{Binding RoleIsReviewer, Converter={StaticResource InverseBooleanConverter}}"
                    Style="{StaticResource MaterialDesignWhiteToggleButton}"
                    ToolTipService.ShowOnDisabled="True">
                    <ToggleButton.ToolTip>
                      <StackPanel Orientation="Vertical">
                        <TextBlock
                          Visibility="{Binding IsSenderCard, Converter={StaticResource BooleanToVisibilityConverter}}">
                          <Run>Swaps the type of this stream card.</Run>
                          <LineBreak />
                          <Run FontWeight="Bold">Click to make it a receiver!</Run>
                        </TextBlock>
                        <TextBlock
                          Visibility="{Binding IsReceiverCard, Converter={StaticResource BooleanToVisibilityConverter}}">
                          <Run>Swaps the type of this stream card.</Run>
                          <LineBreak />
                          <Run FontWeight="Bold">Click to make it a sender!</Run>
                        </TextBlock>
                        <TextBlock
                          Visibility="{Binding RoleIsReviewer, Converter={StaticResource BooleanToVisibilityConverter}}">
                          <LineBreak />
                          <Run FontWeight="Bold">Disabled because you do not have the required permissions.</Run>
                        </TextBlock>
                      </StackPanel>
                    </ToggleButton.ToolTip>
                    <ToggleButton.Content>
                      <md:PackIcon Kind="SwapHorizontal" />
                    </ToggleButton.Content>
                    <md:ToggleButtonAssist.OnContent>
                      <md:PackIcon Kind="SwapHorizontal" />
                    </md:ToggleButtonAssist.OnContent>
                  </ToggleButton>

                  <!--<StackPanel Orientation="Horizontal"
                              Grid.Row="1"
                              Grid.Column="0"
                              Grid.ColumnSpan="3"
                              Margin="0,6 0 0">
                    <TextBlock Margin="0 0 12 0" FontFamily="Consolas"
                               FontSize="12"
                               Foreground="{DynamicResource MaterialDesignBodyLight}"
                               Text="{Binding Stream.id}" />
                  </StackPanel>-->

                </Grid>
                <!--#endregion-->

                <!--  Stream Card Sender Actions  -->
                <Grid Name="StreamCardSenderActions"
                  Grid.Row="1"
                  Margin="0,30,0,0"
                  IsEnabled="{Binding ShowProgressBar, Converter={StaticResource InverseBooleanConverter}}"
                  Visibility="{Binding IsSenderCard, Converter={StaticResource BooleanToVisibilityConverter}}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                  </Grid.ColumnDefinitions>

                  <!--  The branch button  -->
                  <Control Template="{StaticResource BranchButton}" />

                  <!--  The Objects button  -->
                  <Control Grid.Column="1"
                    Template="{StaticResource SelectionButton}" />

                  <!--  The Send Button  -->
                  <Button x:Name="SendButton"
                    Grid.Column="2"
                    Width="120"
                    HorizontalAlignment="Right"
                    md:ButtonAssist.CornerRadius="3"
                    Command="{s:Action Send}"
                    CommandParameter="{Binding}"
                    ContextMenuService.Placement="Center"
                    IsEnabled="{Binding SendEnabled}">
                    <Button.ToolTip>
                      <TextBlock>
                        <Run>Send to Speckle: either the selected objects, or the ones picked up by the filter.</Run>
                      </TextBlock>
                    </Button.ToolTip>
                    <Button.Resources>
                      <local:BindingProxy x:Key="Proxy"
                        Data="{Binding}" />
                    </Button.Resources>
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <Image Grid.Column="0"
                        Width="32"
                        Height="32"
                        Margin="-10,0,5,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Source="/SpeckleDesktopUI;Component/Resources/SenderWhite@32.png" />
                      <TextBlock Grid.Column="1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="Send" />
                    </Grid>
                  </Button>

                  <ToggleButton x:Name="CommitMessageExpanded"
                    Grid.Column="3"
                    Margin="8,5,0,0"
                    Foreground="{DynamicResource MaterialDesignBody}"
                    IsChecked="{Binding CommitExpanderChecked}"
                    IsEnabled="{Binding SendEnabled}"
                    Style="{StaticResource MaterialDesignExpanderToggleButton}"
                    ToolTip="Add a commit message" />

                </Grid>
                <!--#endregion-->

                <!--#region Stream Card Receiver Actions-->
                <Grid x:Name="StreamCardReceiverActions"
                  Grid.Row="1"
                  Margin="0,30,0,0"
                  IsEnabled="{Binding ShowProgressBar, Converter={StaticResource InverseBooleanConverter}}"
                  Visibility="{Binding IsReceiverCard, Converter={StaticResource BooleanToVisibilityConverter}}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>

                  <!--  The branch button  -->
                  <Control Template="{StaticResource BranchButton}" />

                  <!--  The commit button  -->
                  <Control Grid.Column="1"
                    Template="{StaticResource CommitSwappingButton}" />

                  <Button x:Name="ReceiveButton"
                    Grid.Column="2"
                    Width="120"
                    HorizontalAlignment="Right"
                    md:ButtonAssist.CornerRadius="3"
                    Command="{s:Action Receive}"
                    CommandParameter="{Binding}"
                    IsEnabled="{Binding ReceiveEnabled}"
                    Style="{StaticResource MaterialDesignRaisedButton}"
                    ToolTip="Edit/Change Objects">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <Image Grid.Column="0"
                        Width="32"
                        Height="32"
                        Margin="0,0,5,0"
                        VerticalAlignment="Center"
                        Source="/SpeckleDesktopUI;Component/Resources/ReceiverWhite@32.png" />

                      <TextBlock Grid.Column="1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="Receive  " />
                    </Grid>
                  </Button>
                </Grid>
                <!--#endregion-->
              </Grid>

              <!--#region Commit Message-->
              <md:Card Grid.Row="1"
                Padding="5"
                md:ShadowAssist.ShadowDepth="Depth0"
                Visibility="{Binding IsChecked, ElementName=CommitMessageExpanded, Converter={StaticResource BooleanToVisibilityConverter}}">
                <md:Card.Resources>
                  <local:BindingProxy x:Key="Proxy"
                    Data="{Binding}" />
                </md:Card.Resources>
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                  </Grid.ColumnDefinitions>
                  <md:PackIcon Grid.Column="1"
                    Margin="0,10,0,10"
                    Kind="MessageAdd"
                    Opacity="0.5" />
                  <TextBox Grid.Column="0"
                    Margin="20,0,20,20"
                    md:HintAssist.HelperText="Commit message - keep track of changes made. Defaults to 'Pushed X elements'"
                    md:TextBlockAssist.AutoToolTip="False"
                    s:View.ActionTarget="{Binding Data, Source={StaticResource Proxy}}"
                    PreviewKeyDown="{s:Action SendWithCommitMessage}"
                    Text="{Binding Path=Data.CommitMessage, Source={StaticResource Proxy}, Mode=TwoWay}" />
                </Grid>
              </md:Card>
              <!--#endregion-->

              <!--#region Progress Bar-->

              <Grid
                Visibility="{Binding Path=DataContext.ShowProgressBar, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.Resources>
                  <local:BindingProxy x:Key="Proxy"
                    Data="{Binding}" />
                </Grid.Resources>
                <ProgressBar x:Name="ProgressBar"
                  Grid.Column="0"
                  Height="15"
                  Margin="0,0"
                  VerticalAlignment="Center"
                  md:TransitionAssist.DisableTransitions="True"
                  BorderBrush="Transparent"
                  BorderThickness="0"
                  IsIndeterminate="{Binding Path=DataContext.ProgressBarIsIndeterminate, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                  Maximum="{Binding Path=DataContext.Progress.Maximum, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                  Minimum="0"
                  Value="{Binding Path=DataContext.Progress.Value, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <TextBlock Grid.Column="0"
                  Height="10"
                  Margin="20,0"
                  HorizontalAlignment="Left"
                  FontSize="9"
                  Foreground="White"
                  Opacity="0.7"
                  Text="{Binding Path=DataContext.Progress.ProgressSummary, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                  TextAlignment="Center" />
                <!--  TODO: Figure out how to make this nice  -->
                <Button x:Name="Cancel"
                  Grid.Column="0"
                  Width="14"
                  Height="15"
                  Margin="0,0,20,0"
                  HorizontalAlignment="Right"
                  md:ButtonAssist.CornerRadius="3"
                  s:View.ActionTarget="{Binding Source={StaticResource Proxy}, Path=Data}"
                  Background="Transparent"
                  BorderBrush="Transparent"
                  BorderThickness="0"
                  Command="{s:Action CancelSendOrReceive}"
                  Content="{md:PackIcon Kind=Close,
                                        Size=12}"
                  Style="{StaticResource MaterialDesignFloatingActionButton}"
                  ToolTip="Cancel" />
              </Grid>
              <!--#endregion-->

              <!--#region Updates display-->
              <md:Card Grid.Row="1"
                Margin="0,0,0,0"
                Padding="5"
                Panel.ZIndex="1000"
                md:ShadowAssist.ShadowDepth="Depth0"
                Background="{StaticResource PrimaryHueDarkBrush}"
                UniformCornerRadius="0"
                Visibility="{Binding ServerUpdates, Converter={StaticResource BooleanToVisibilityConverter}}">
                <md:Card.Resources>
                  <local:BindingProxy x:Key="Proxy"
                    Data="{Binding}" />
                </md:Card.Resources>
                <Grid Margin="10,5,10,0">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="20" />
                  </Grid.ColumnDefinitions>
                  <TextBlock Grid.Column="0"
                    Padding="4"
                    FontSize="12"
                    Foreground="White"
                    Text="{Binding ServerUpdateSummary}"
                    TextWrapping="Wrap" />

                  <Button Grid.Column="1"
                    Width="20"
                    Height="20"
                    s:View.ActionTarget="{Binding Data, Source={StaticResource Proxy}}"
                    Background="White"
                    BorderBrush="White"
                    Command="{s:Action CloseUpdateNotification}"
                    CommandParameter="{Binding}"
                    Content="{md:PackIcon Kind=Close,
                                          Size=10}"
                    Foreground="Black"
                    Style="{StaticResource MaterialDesignFloatingActionLightButton}"
                    ToolTip="Close notification." />
                </Grid>
              </md:Card>
              <!--#endregion-->

              <!--#region Error display-->
              <md:Card Grid.Row="1"
                Margin="0,0,0,0"
                Padding="5"
                Panel.ZIndex="1000"
                md:ShadowAssist.ShadowDepth="Depth0"
                Visibility="{Binding ShowErrors, Converter={StaticResource BooleanToVisibilityConverter}}">
                <md:Card.Resources>
                  <local:BindingProxy x:Key="Proxy"
                    Data="{Binding}" />
                </md:Card.Resources>
                <Grid Margin="0,0,10,0">
                  <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                  </Grid.RowDefinitions>
                  <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Expander Grid.Row="1"
                      HorizontalAlignment="Stretch"
                      Background="Transparent"
                      FontSize="12">
                      <Expander.Header>
                        <TextBlock FontSize="12">Warnings</TextBlock>
                      </Expander.Header>
                      <TextBox MaxHeight="200"
                        Margin="25,0,25,0"
                        HorizontalAlignment="Stretch"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Foreground="Gray"
                        IsReadOnly="True"
                        Style="{x:Null}"
                        TextWrapping="Wrap"
                        VerticalScrollBarVisibility="Visible">
                        <TextBox.Text>
                          <Binding Mode="OneWay"
                            Path="FormattedErrors" />
                        </TextBox.Text>
                      </TextBox>
                    </Expander>
                    <Button Grid.Column="1"
                      Width="20"
                      Height="20"
                      Margin="0,13"
                      VerticalAlignment="Top"
                      s:View.ActionTarget="{Binding Data, Source={StaticResource Proxy}}"
                      Background="White"
                      BorderBrush="White"
                      Command="{s:Action CloseErrorNotification}"
                      CommandParameter="{Binding}"
                      Content="{md:PackIcon Kind=Close,
                                            Size=10}"
                      Foreground="Black"
                      Style="{StaticResource MaterialDesignFloatingActionLightButton}"
                      ToolTip="Close notification." />
                  </Grid>


                </Grid>
              </md:Card>
              <!--#endregion-->

            </StackPanel>
          </md:Card>

        </Grid>
      </DataTemplate>
      <!--#endregion-->

    </ResourceDictionary>
  </UserControl.Resources>

  <md:TransitioningContent OpeningEffect="{md:TransitionEffect FadeIn}">
    <Grid Margin="0">
      <Grid Margin="5,0,5,0">
        <Grid.RowDefinitions>
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <ScrollViewer Grid.Row="0"
          Grid.Column="0"
          HorizontalAlignment="Stretch"
          VerticalAlignment="Stretch"
          HorizontalScrollBarVisibility="Disabled"
          VerticalScrollBarVisibility="Auto">
          <ItemsControl Margin="0,10"
            ItemTemplate="{StaticResource StreamCardTemplate}"
            ItemsSource="{Binding StreamList, Mode=OneWay, UpdateSourceTrigger=Default}" />
        </ScrollViewer>
        <StackPanel Grid.Row="0"
          Margin="58,30,58,0"
          Visibility="{Binding EmptyState, Converter={StaticResource BooleanToVisibilityConverter}}">
          <TextBlock FontSize="30"
            FontWeight="Light"
            Foreground="Gray"
            TextWrapping="Wrap">
            Hello! Seems like you have no streams in this file.
          </TextBlock>
          <Separator Margin="0,20,300,20"
            Background="Gray" />
          <TextBlock FontSize="20"
            FontWeight="Light"
            Foreground="Gray"
            TextWrapping="Wrap">
            You can add or create a stream from the big friendly blue button in the lower right.
          </TextBlock>
        </StackPanel>
      </Grid>

      <!--#region The BAB (Big Add Button)-->
      <Canvas>
        <Button x:Name="CreateStreamButton"
          Canvas.Right="0"
          Canvas.Bottom="0"
          Width="60"
          Height="60"
          Margin="32"
          HorizontalAlignment="Right"
          VerticalAlignment="Bottom"
          md:ShadowAssist.ShadowDepth="Depth3"
          Command="{s:Action ShowStreamCreateDialog}"
          DockPanel.Dock="Bottom"
          Style="{StaticResource FlatFloatingActionButton}"
          ToolTip="Add a stream"
          ToolTipService.Placement="Left">
          <Image Width="32"
            Height="32"
            Source="/SpeckleDesktopUI;Component/Resources/CreateStreamWhite@32.png" />
        </Button>
      </Canvas>
      <!--#endregion-->
    </Grid>
  </md:TransitioningContent>

</UserControl>